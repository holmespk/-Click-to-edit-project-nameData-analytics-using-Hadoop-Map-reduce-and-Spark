The package consists of the following files 

1. Problem_1.scala - source code for probelm 1
2. Problem_2.scala - source code for probelm 2
3. Problem_3a.scala - source code for probelm 3a
4. Problem_3b.scala - source code for probelm 3b
5. Time Screen Shots folder - ALL times from Spark UI

Compiling and running instructions

1. Extract the zip folder.
2. Start the spark shell

Problem_1
---------------------------------------------------------------------------------------------------
1. Copy the program contents and paste it into spark shell. 
2. create a arguments array 
   val args = Array("path to business.csv","any word you wish").(Paste this in the shell)
3. enter the command Problem_1.main(args).
4. The results are displayed to the console. 

Problem_2 
----------------------------------------------------------------------------------------------------
1. Copy the program contents and paste it into spark shell. 
2. create a arguments array 
   val args = Array("path to review.csv").(Paste this in the shell)
3. enter the command Problem_2.main(args).
4. Repeat the above steps for running the program in spark cluster too.
4. The results are displayed to the console.

Execution time in local mode : 4 seconds
Execution time in cluster mode :3.2 seconds

Note:
---------------------------------------------------------------------------------------------------
To start spark shell in local mode with all cores 
"./spark-shell --master spark://pavan:7077" 

here spark://pavan:7077 is the name of the master. 

To start spark shell in cluster mode with 6 cores 

spark-shell --master yarn-client --executor-memory 2G --executor-cores 6 --num-executors 6

Problem_3a,3b
-----------------------------------------------------------------------------------------------------
1. Copy the program contents and paste it into spark shell. 
2. create a arguments array 
   val args = Array("path to business.csv","path to review.csv").(Paste this in the shell)
3. enter the command Problem_3a.main(args).
4. Do the above same steps for Problem_3b also.
4. The results are displayed in the spark web UI , worker section stdout

Execution time without broadcast variable :3.6 seconds
Execution time with broadcast variable :1.5 seconds

From above times we see that usage of broadcast variable decreases the job running time considerably.


Note : All times are have been populated into "Time ScreenShoots" folder








